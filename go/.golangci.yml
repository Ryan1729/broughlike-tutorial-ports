linters:
  # The intent here is to enable everything available and then later 
  # disable whatever doesn't make sense.
  enable:
    - govet
    - errcheck
    - staticcheck
    - unused
    - gosimple
    - structcheck
    - varcheck
    - ineffassign
    - deadcode
    - typecheck
    - bodyclose
    - noctx
    - golint
    - rowserrcheck
    - stylecheck
    - gosec
    - interfacer
    - unconvert
    - dupl
    - goconst
    - gocyclo
    - gocognit
    - asciicheck
    - gofmt
    - gofumpt
    - goimports
    - goheader
    - gci
    - maligned
    - depguard
    - misspell
    - lll
    - unparam
    - dogsled
    - nakedret
    - prealloc
    - scopelint
    - gocritic
    - gochecknoinits
    - gochecknoglobals
    - godox
    - funlen
    - whitespace
    - goprintffuncname
    - goerr113
    - gomodguard
    - godot
    - testpackage
    - nestif
    - exportloopref
    - exhaustive
    - sqlclosecheck
    - nlreturn
    - nolintlint
  # disabled
    # This one is too annoying without an auto-fix. A fixer is currently
    # in progress at https://github.com/bombsimon/wsl/pull/72
    #- wsl
    # This one has what I consider to be false positives:
    # https://github.com/tommy-muehle/go-mnd/issues/12
    # and false negatives:
    # https://github.com/tommy-muehle/go-mnd/issues/11
    # Additionally, it would be very hard for a lint to tell whether the
    # comments around some code explain why some constants are used here and
    # only here or not, leading to needing to add potentially several //nolint
    # directives
    #- gomnd


linters-settings:
  funlen:
    # The amount of statements in a func measures how many things one named unit
    # of code does, which may actually be useful to reduce. Measuring lines just
    # tracks at best, how much someone has to scroll to see all the code, and
    # given the statement limit exists, basically only measures how big
    # statements are in the code, which is more or less a non-issue.
    lines: 9223372036854775807 # 2^63 - 1
